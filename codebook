This script was written for dataanalysis as a part of Porjectwork of Coursera module: Getting and Cleaning Data
As a part of Assignment, access was given to a dataset from UCI site. It my be accessed from www.smartlab.ws
Original dataset is for 30 volunteers. A smartphone was tied to the waist of each volunteer. She/He was asked to perform six activitities
Walking, walking Upsairs, Walking DownStairs, Sitting, Standing and Lying Down
For each of the position many measures were taken with or without gravity in three axial directions X, Y and Z
Of the total dataset, investigators and randomly taken out 30% data as Test data and 70% as Training Data
We were given zip file of the data, which when unzipped was well organised into Test and training folders, and general files
The file for Features was common, that had various measurement indicies and a code
The file for activity labels was also common, mentioning all six activities and their codes
Each of test and training folders has three files: one for activity code, another for subject code and third for the measurements.
All three files were without any column name
Our assignment was to merge all test and training files togethre, with descriptive column names and activity labels
Then extrat out measurement labels of mean and SD
Use this tidy data to find means and SD for each subject and each activity
For writing the script following process was followed:
Text files were read using read.table function
First two common files were read: features file and activity label file
Then meanurement names of feature files were simplified as follows:
features$measure <- gsub("\\(|\\)|,","",features$measure)
      features$measure <- gsub("-|\\.","_",features$measure)
      features$measure <- gsub("^t","time_",features$measure)
      features$measure <- gsub("BodyAcc","BA",features$measure)
      features$measure <- gsub("BAJerk","BAJ",features$measure)
      features$measure <- gsub("GravityAcc","GA",features$measure)
      features$measure <- gsub("BodyGyroJerkMag","BdGyJkMag",features$measure)
      features$measure <- gsub("BodyGyroJerk","BdGyJk",features$measure)
      features$measure <- gsub("BodyGyroMag","BdGyMg",features$measure)
      features$measure <- gsub("BodyGyro_bandsEnergy","BdGyMgEn",features$measure)
      features$measure <- gsub("BodyGyro","BdGy",features$measure)
      features$measure <- gsub("^f","FFT_",features$measure)
      features$measure <- gsub("BodyBody","Body",features$measure)
      features$measure <- gsub("^angle","angle_",features$measure)
It helped to remove () etc and also to bring in brevity but maintaining the description
Then all test datafiles and training datafiles were joined as follows;
 TestData<-cbind(
      read.table("./test/subject_test.txt",col.names=c("subjectID")),
      read.table("./test/y_test.txt",col.names = c("activity")),
      read.table("./test/X_test.txt",col.names=as.character(features$measure))
       ),

    # Join all Training files together in TrainingData  

      TrainData<-cbind(
      read.table("./train/subject_train.txt",col.names=c("subjectID")),
      read.table("./train/y_train.txt",col.names = c("activity")),
      read.table("./train/X_train.txt",col.names=as.character(features$measure))
It was followed by joining both the datasets into one common file as follows:
 ## Join the test and training data using rbind

    JoinedData<- rbind(TestData, TrainData)
Followed by this, following setps were done to convert numeric activity cods to activity labels and keep only mean and SD columns as follows;
# Replace numeric activity codes to Activity labels   
      JoinedData <- JoinedData %>% 
            mutate(activity = activityLabels[ JoinedData$activity,2 ]) %>%
  
    # Remove columns that are not for mean() or std() or meanFreq(), by using gsub feature of editing texts
    # but retain the first two columns: subject (column 1) and activity (column 2).
    # Concatenate column 1 and 2 with the rest of the columns that satisfy the condition.
  
          select(c(1,2,2 + grep(".*[Mm][Ee][Aa][Nn].*|.*[Ss][Tt][Dd].*",features$measure))) %>%
Finally, to give the dsired output of means and SD by each subject and activity, data was grouped by these two variables as follows and
then written to text file as directed in the assignment
# Group by subjectID and activity
    # Summarize to take the average(mean) based on grouping for all other variables
  
        group_by(subjectID,activity) %>%
        summarize_each(funs(mean))

    # Write file to project_tidyData.txt
    write.table(JoinedData,"./project_tidyData.txt",row.names = FALSE)
    
    
    
    
